# github_manager.py

import os
from github import Github
from config import GITHUB_TOKEN, GITHUB_USERNAME

class GitHubManager:
    def __init__(self):
        self.g = Github(GITHUB_TOKEN)
        self.user = self.g.get_user(GITHUB_USERNAME)

    def create_and_push(self, local_app_path: str, repo_name: str) -> str:
        """
        ينشئ مستودعًا جديدًا، يرفع إليه جميع الملفات، ويعيد رابط المستودع.
        """
        try:
            # 1. إنشاء المستودع
            repo = self.user.create_repo(repo_name)
            repo_url = repo.html_url
        except Exception as e:
            # إذا كان المستودع موجودًا بالفعل
            repo = self.user.get_repo(repo_name)
            repo_url = repo.html_url
            print(f"المستودع {repo_name} موجود بالفعل.")

        # 2. إضافة الملفات ورفعها
        commit_message = "Initial commit: App generated by Gemini Bot"
        
        for root, _, files in os.walk(local_app_path):
            for file_name in files:
                file_path = os.path.join(root, file_name)
                relative_path = os.path.relpath(file_path, local_app_path) 
                
                # تخطي الملفات غير المرغوبة مثل .DS_Store
                if relative_path.startswith('.'):
                    continue
                    
                with open(file_path, 'r', encoding='utf-8') as f:
                    content = f.read()
                
                # رفع الملف
                try:
                    repo.create_content(relative_path, commit_message, content)
                except Exception as e:
                    # قد يتطلب الأمر تحديث المحتوى إذا كان موجوداً
                    print(f"خطأ في رفع الملف {relative_path}: {e}")
                    pass # تجاهل الأخطاء البسيطة في الرفع الأولي

        return repo_url
